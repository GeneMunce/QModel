package QModel;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class Executor {

	
	public static void main(String[] args) {
		ArrayList<Token> exTokenList = new ArrayList<>();

		// This is the main class for the Qmodel
		// Initialize the run variables
		int freeTokenCount = 100;
		Queue<Token> freeTokenList = new LinkedList();
		for (int i = 0; i < freeTokenCount; i++) {
			freeTokenList.add(new Token());
		}
		// Initialize and Connect the model components
		Queue<Station> exStationList = new LinkedList();
		Create create = new Create(0, 1, 1, 1, 1, freeTokenList);
		exStationList.add(new Station("Service1", 2, 1));
		exStationList.add(new Station("Service2", 4, 1));
		exStationList.add(new Station("Service3", 6, 1));
		// Create the token list

		// Start the model simulation loop
			// tick all stations in reverse
			// tick the time
			// every n ticks
				// update station statistics
				// cleanup retired tokens and update statistics
		// stop simulation
		// cleanup the token list and update statistics
		freeTokenList.clear();
		
		// cleanup station list and update statistics
		while(exStationList.peek() != null) {
			System.out.println(exStationList.peek().getStationName() 
					+ " Work: " + exStationList.peek().getWorkTime() 
					+ " Idle: " + exStationList.peek().getIdleTime() 
					+ " Wait: " + exStationList.peek().getWaitTime() 
					+ " Block: " + exStationList.poll().getBlockTime());
		}

	}

}
